{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \".Column{width:50px;display: inline-block;}\\r\\n.Tile{position: relative; height: 50px;width: 50px;display: inline-block;border: 1px solid white;vertical-align: top;line-height: 50px;text-align: center;}\\r\\n.CenterDiv{position: absolute;width: 100%;text-align: center;top:calc(50% - 200px);}\\r\\n.TileID{height:45px;width:45px;line-height: 50px;text-align: center;border:1px solid black;display: inline-block;margin:2px;}\\r\\n.Tile{overflow: hidden;}\\r\\n.ButtonsClass{width: 100%;text-align: center;top: calc(50% - 250px);}\\r\\n.ButtonsClass input{margin:0px 20px;width: 80px;height: 40px;}\\r\\n.innerDiv{height:200px;width:200px;overflow: hidden;position: absolute;background-size: contain;}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsUUFBUSxXQUFXLHNCQUFzQixDQUFDO0FBQzFDLE1BQU0sbUJBQW1CLENBQUMsYUFBYSxZQUFZLHNCQUFzQix3QkFBd0Isb0JBQW9CLGtCQUFrQixtQkFBbUIsQ0FBQztBQUMzSixXQUFXLG1CQUFtQixZQUFZLG1CQUFtQixzQkFBc0IsQ0FBQztBQUNwRixRQUFRLFlBQVksV0FBVyxrQkFBa0IsbUJBQW1CLHVCQUF1QixzQkFBc0IsV0FBVyxDQUFDO0FBQzdILE1BQU0saUJBQWlCLENBQUM7QUFDeEIsY0FBYyxZQUFZLG1CQUFtQix1QkFBdUIsQ0FBQztBQUNyRSxvQkFBb0IsZ0JBQWdCLFlBQVksYUFBYSxDQUFDO0FBQzlELFVBQVUsYUFBYSxZQUFZLGlCQUFpQixtQkFBbUIseUJBQXlCLENBQUMiLCJmaWxlIjoic3JjL2FwcC9hcHAuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5Db2x1bW57d2lkdGg6NTBweDtkaXNwbGF5OiBpbmxpbmUtYmxvY2s7fVxyXG4uVGlsZXtwb3NpdGlvbjogcmVsYXRpdmU7IGhlaWdodDogNTBweDt3aWR0aDogNTBweDtkaXNwbGF5OiBpbmxpbmUtYmxvY2s7Ym9yZGVyOiAxcHggc29saWQgd2hpdGU7dmVydGljYWwtYWxpZ246IHRvcDtsaW5lLWhlaWdodDogNTBweDt0ZXh0LWFsaWduOiBjZW50ZXI7fVxyXG4uQ2VudGVyRGl2e3Bvc2l0aW9uOiBhYnNvbHV0ZTt3aWR0aDogMTAwJTt0ZXh0LWFsaWduOiBjZW50ZXI7dG9wOmNhbGMoNTAlIC0gMjAwcHgpO31cclxuLlRpbGVJRHtoZWlnaHQ6NDVweDt3aWR0aDo0NXB4O2xpbmUtaGVpZ2h0OiA1MHB4O3RleHQtYWxpZ246IGNlbnRlcjtib3JkZXI6MXB4IHNvbGlkIGJsYWNrO2Rpc3BsYXk6IGlubGluZS1ibG9jazttYXJnaW46MnB4O31cclxuLlRpbGV7b3ZlcmZsb3c6IGhpZGRlbjt9XHJcbi5CdXR0b25zQ2xhc3N7d2lkdGg6IDEwMCU7dGV4dC1hbGlnbjogY2VudGVyO3RvcDogY2FsYyg1MCUgLSAyNTBweCk7fVxyXG4uQnV0dG9uc0NsYXNzIGlucHV0e21hcmdpbjowcHggMjBweDt3aWR0aDogODBweDtoZWlnaHQ6IDQwcHg7fVxyXG4uaW5uZXJEaXZ7aGVpZ2h0OjIwMHB4O3dpZHRoOjIwMHB4O292ZXJmbG93OiBoaWRkZW47cG9zaXRpb246IGFic29sdXRlO2JhY2tncm91bmQtc2l6ZTogY29udGFpbjt9Il19 */\"","module.exports = \"<meta property=\\\"og:image\\\" content=\\\"/Tile-app/asspts/ogImage.png\\\" />\\n\\n<div class=\\\"CenterDiv\\\">\\n  <div *ngIf='this.ArraysOfArrays'>\\n    <div class=\\\"Column\\\" *ngFor='let itm of this.ArraysOfArrays'>\\n      <div class=\\\"Tile\\\" *ngFor='let tile of itm'>\\n        <span *ngIf=\\\"!this.BackgroundImage\\\" class=\\\"TileID\\\">{{tile.ID}}</span>\\n        <div *ngIf='!tile.isEmpty' [ngStyle]=\\\"tile.Img\\\" class=\\\"innerDiv\\\" (click)=\\\"this.TileClick(tile)\\\"></div>\\n      </div>\\n    </div>\\n  </div>\\n  <br />\\n  <div class=\\\"ButtonsClass\\\">\\n      <input type=\\\"button\\\" value=\\\"Solve\\\" (click)='this.SolvePuzzle()' />\\n      <input type=\\\"button\\\" value=\\\"Shuffle\\\" (click)='this.Shuffle()' />\\n    </div>\\n  <label>\\n    <h2>Paste Image URL below</h2>\\n    <input type=\\\"text\\\" placeholder=\\\"Bakcground Image Location\\\" [(ngModel)]='this.BackgroundImage' (ngModelChange)='this.getArrayOfArrays()' />\\n  </label>\\n\\n</div>\\n\\n<router-outlet></router-outlet>\"","import { Component, OnInit } from '@angular/core';\nimport { NgForm, NgModel } from '@angular/forms';\nimport { toPublicName } from '@angular/compiler/src/i18n/serializers/xmb';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  title = 'tile-app';\n  public TopLeftTile: SingleTile = new SingleTile\n  public ArraysOfArrays;\n  public imageURL: string;\n  public BackgroundImage: string = 'https://scontent.fewr1-3.fna.fbcdn.net/v/t1.0-9/45000274_10155623833461922_164377830166102016_n.jpg?_nc_cat=101&_nc_ht=scontent.fewr1-3.fna&oh=71d050dcae5acedac55c8902d14960ad&oe=5CAE8F94'\n  public shuffleOrder: SingleTile[] = [];\n  private BlankTile: SingleTile = this.TopLeftTile\n\n  ngOnInit(): void {\n    this.CreateTiles();\n    this.getArrayOfArrays()\n  }\n\n  Shuffle(numberOfMovesToShuffle: number) {\nif (!numberOfMovesToShuffle){numberOfMovesToShuffle=100}\n  for (let i = 0; i < numberOfMovesToShuffle; i++) {\n    let allDriections:string[] = Object.keys(this.BlankTile.Links) \n    let selectedDirection:string=allDriections[this.getRandomDirection()];\n    while(!this.BlankTile.Links[selectedDirection]){\n       selectedDirection=allDriections[this.getRandomDirection()];\n    }\n    this.TileClick(this.BlankTile.Links[selectedDirection])\n    }\n  }\n\n  getRandomDirection(){return Math.floor(Math.random() * 5)}\n\n  SolvePuzzle() {\n    // this is kinda cheating, but its the simple way  to solve the puzzle,\n    // we will just play it backwards.\n    while (this.shuffleOrder.length>0) {\n      this.TileClick(this.shuffleOrder.pop(),false);\n    }\n  }\n\n  TileClick(tile: SingleTile,log:boolean=true) {\n    let swpWith: SingleTile;\n    //checks to see if we can swap and finds the approprate tile to swap\n    if (tile.Links.Bottom && tile.Links.Bottom.isEmpty) { swpWith = tile.Links.Bottom; }\n    if (tile.Links.Top && tile.Links.Top.isEmpty) { swpWith = tile.Links.Top }\n    if (tile.Links.Left && tile.Links.Left.isEmpty) { swpWith = tile.Links.Left }\n    if (tile.Links.Right && tile.Links.Right.isEmpty) { swpWith = tile.Links.Right }\n\n    //next we swap the info in the tiles... \n    // yes technically its cheating, but i wont tell =D\n    if (swpWith) {\n      let tmpID: number = swpWith.ID\n      let tmpImg: ImagePart = swpWith.Img\n      let tmpisEmpty: boolean = swpWith.isEmpty\n\n      swpWith.isEmpty = tile.isEmpty\n      swpWith.Img = tile.Img\n      swpWith.ID = tile.ID\n\n      tile.ID = tmpID\n      tile.Img = tmpImg\n      tile.isEmpty = tmpisEmpty\n\n      this.BlankTile = tile\n     if (log){this.shuffleOrder.push(swpWith)}\n      this.getArrayOfArrays() // update the display....\n    }\n\n  }\n\n\n  getArrayOfArrays() {\n    let rtn = [];\n    let rw: SingleTile = this.TopLeftTile\n    while (rw) {\n      rtn.push([rw])\n      rw.Img['background-image'] = 'url(\"' + this.BackgroundImage + '\")'\n      rw = rw.Links.Right\n    }\n\n    rtn.forEach(itm => {\n      let downWard = itm[0].Links.Bottom\n      while (downWard) {\n        itm.push(downWard)\n        downWard.Img['background-image'] = 'url(\"' + this.BackgroundImage + '\")'\n\n        downWard = downWard.Links.Bottom\n      }\n    })\n    window['DN'] = rtn\n    this.ArraysOfArrays = undefined\n    this.ArraysOfArrays = rtn\n  }\n\n\n  counter() { let a = 0; return () => { a = a + 1; return a } }\n\n  CreateTiles() {\n    this.TopLeftTile.isEmpty = true\n    this.GenerateTiles(4, 4, this.TopLeftTile)\n    window['TopLeft'] = this.TopLeftTile\n  }\n\n  jumpDownXTiles(distance: number, startTile: SingleTile) {\n    let rtn: SingleTile = startTile\n    for (let j = 0; j < distance; j++) {\n      if (distance > 0) {\n        rtn = rtn.Links.Bottom || rtn\n      }\n    }\n    return rtn\n  }\n\n  GenerateTiles(width: number, length: number, TopLeftTile: SingleTile) {\n    let cnt = this.counter();\n\n    //first we will link all the tiles across the top.\n    //next we will link all the tiles across the bottom.\n    let currentTile: SingleTile = TopLeftTile\n\n    for (let w: number = 1; w < width; w++) {\n      let newTile: SingleTile = new SingleTile\n      newTile.ID = cnt();\n      newTile.Img.left = (-50 * (w)).toString() + 'px'\n      newTile.Img.top = '0px'\n      newTile.Img['background-image'] = 'url(\"' + this.BackgroundImage + '\")'\n      newTile.Links.Left = currentTile\n      currentTile.Links.Right = newTile\n      currentTile = newTile\n    }\n\n    //now to link all the tiles across the bottom\n    let InitalcurrentTile: SingleTile = TopLeftTile\n    currentTile = InitalcurrentTile\n    for (let w: number = 0; w < width; w++) {\n      for (let l: number = 0; l < length - 1; l++) {\n        let newTile: SingleTile = new SingleTile\n        newTile.ID = cnt();\n        newTile.Img.left = (-50 * (w)).toString() + 'px'\n        newTile.Img.top = (-50 * (l + 1)).toString() + 'px'\n        newTile.Img['background-image'] = 'url(\"' + this.BackgroundImage + '\")'\n\n        newTile.Links.Top = currentTile\n        currentTile.Links.Bottom = newTile\n\n        //since we now have a function to jump in the list we can now link across from here\n        //we only need if the inital link has a left\n        if (InitalcurrentTile.Links.Left) {\n          let crossLinkTile: SingleTile = this.jumpDownXTiles(l + 1, InitalcurrentTile.Links.Left)\n          newTile.Links.Right = crossLinkTile\n          crossLinkTile.Links.Left = newTile\n        }\n        currentTile = newTile\n      }\n      currentTile = InitalcurrentTile.Links.Right\n      InitalcurrentTile = InitalcurrentTile.Links.Right\n    }\n  }\n\n}\n\nexport class SingleTile {\n  public Img: ImagePart = new ImagePart\n  public Links: Link = new Link\n  public ID: any\n  public isEmpty: boolean = false\n}\n\nclass ImagePart {\n  [key: string]: string;\n  // public top: string\n  // public left: string\n}\n\nclass Link {\n  public Top: SingleTile = undefined\n  public Right: SingleTile = undefined\n  public Bottom: SingleTile = undefined\n  public Left: SingleTile = undefined\n}","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { FormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}